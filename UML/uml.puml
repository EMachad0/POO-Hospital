@startuml uml
skinparam dpi 300
!define LIGHTORANGE
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

'package "Apresentacao" {
'
'    class MainGui {
'        - root : JPanel
'        - tabbedPane : JTabbedpane
'        + {Static} Main(String[]) : void
'        + getRoot() : JPanel
'    }
'
'    class Tab {
'     - root : JPanel
'        - table : JTable
'        - btnAdd : JButton
'        - btnUpd : JButton
'        - btnRmv : JButton
'        + getRoot() : JPanel
'    }
'
'    class CadastroDialog {
'    }
'
'    class MyFormatter {
'        + {static} formatCpf(long) : String
'        + {static} formatMoney(float) : String
'    }
'}

package "Sistema" {
    abstract class AbstractTableModel

    abstract class "Sistema"<T> {
        - columns : String[]
        - {abstract} initColumns() : void
        + cadastrar(T) : void
        + cadastrar(List<T>) : void
        + update(int) : void
        + remove(int) : void
        + get(int) : T
        + getAll() : List<T>
        + atualizar() : void
        + getRowCount() : int
        + getColumnCount() : int
        + getColumnName() : String
    }

    class "SistemaMedico" {
        - initColumns() : void
        + getValueAt(int, int) : Object
    }

    class "SistemaPaciente" {
        - initColumns() : void
        + getValueAt(int, int) : Object
    }

    class "SistemaConsulta" {
        - initColumns() : void
        + getValueAt(int, int) : Object
    }
}

package "Dados" {

    interface "Dado"

    class "Consulta" {
        - id : int
        - valor : float
        - data : Date
        - diagnostico : String
    }

    class "Medico" {
        - especialidade : String
    }

    class "Paciente" {
        - descricao : String
    }

    abstract class "Pessoa" {
        - cpf : long
        - nome : String
        - idade : short
        - cidade : String
    }
}

package "DAO" {
    class "ConsultaDAO"
    class "MedicoDAO"
    class "PacienteDAO"
    ' class "PessoaDAO"

    interface "DAO"<T> {
        + {abstract} insert(T t) : boolean
        + {abstract} update(T t) : boolean
        + {abstract} delete(T t) : boolean
        + {abstract} select(int i) : T
        + {abstract} selectAll() : List<T>
    }

    class "Conexao" {
        - senha : String
        + {static} getsenha() : String
        + getConexao() : Connection
    }

    class "Connection"
}

'MainGui --> Tab : -tabs
'Tab --> Sistema : -sistema
'Tab ..> CadastroDialog

Sistema --|> AbstractTableModel
SistemaMedico --|> Sistema
SistemaConsulta --|> Sistema
SistemaPaciente --|> Sistema
'SistemaMedico --> MedicoDAO
'SistemaConsulta --> ConsultaDAO
'SistemaPaciente --> PacienteDAO

'Consulta --|> Dado
'Pessoa <|-- Dado
Paciente --|> Pessoa
Medico --|> Pessoa
Consulta --> Paciente : -paciente
Consulta --> Medico : -medico

/'
ConsultaDAO ..> Consulta
MedicoDAO ..> Medico
PacienteDAO ..> Paciente
PessoaDAO ..> Pessoa
'/

ConsultaDAO ..|> DAO
MedicoDAO ..|> DAO
PacienteDAO ..|> DAO

DAO --> Conexao : -conexao
Conexao --> Connection : -connection
@enduml